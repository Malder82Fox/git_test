ФАЙЛЫ и ДИРЕКТОРИИ

ls показать список файлов/папок, ls -a показать скрытые
	
cd изменить директорию (cd ../ на уровень вверх; cd ~ возврат в домашнюю) exp.  cd name/

mkdir создать диреторию exp. mkdir test

touch создать файл exp. toush newfile.txt

cp копировать файл exp. cp newfile.txt newfile_copy.txt

mv переместить/переименовать exp. mx newfile.txt newfile_original.txt

echo записать данные в файл exp. echo "Hello" > newfile_original.txt

cat посмотреть содержимое файла exp. cat newfile_original.txt

rm удалить exp. rm newfile_original.txt,  rm -r test удалить директорию test рекурсивно (со всем содержимим)

РЕПОЗИТОРИИ

git init создать репозиторий в текущей папке

git status показывает статус репозитория

 git remote add origin https://...... добавить  связь между локальным и серверным (origin) репозиторием, по ссылке из gitHub
 
 git remote -v покажет список соединений локального репозитория и сетевого (origin)
 
 git add добавить файл в коммит (зарегестрировать в индексе изменений), git add example.txt
 
 git rm --cached удалить файл из коммита, git rm --cahed exp.txt 
 
 git commit создание коммита, регистрации изменений, попросит написать сообщение (что делали)
 
 git commit -m 'text message' создание коммита сразу с сообщением
 
 git commit -am 'text message' добавление файла в коммит и создание коммита с сообщением
 
 .gitkeep позволяет добавлять пустые папки в коммит, данный файл должен лежать в папке, которую нужно добавить
 
 .gitignore не добавляет папки в коммит, создаем файл в корне папки .gitignore в него записываем файлы которые не надо добавлять, файл и указаные файлы в одной папке !!!!
 
 git log показывает историю коммитов
 
 git log --oneline  показывает историю в более коротком виде
 
 git reset возращает к указаному коммиту, нужно указать хэш коммита к которому хотим вернуться,
  git reset 726d1b3
  
  git reflog показывает все операции которые были произведены в репозитории
  
  git revert создает новый коммит который отменяет действия в указанном коммите
  
  git restore сброс состояния файла на указанное   
  
  git branch покажет состояние по веткам, какие есть и где мы находимся
   
  git branch name создаем новую ветку name
  
  git branch name branch_name создаст новую ветку name от ветки branch_name, я могу находиться в это время на любой ветке
  
  git checkout -b branch_name мы автоматический переключимся на новую ветку branch_name, создадим её во время перехода, новая ветка создаётся от ветки master !!!!
  
  git checkout name переключимся на ветку name  
  
  git clone git@github.com:Malder82Fox/python_lessons.git name_new_or_old_repo кланируем репозиторий с удаленного наба на компьютер, с использованием ssh
  
  git push загружает все изменеия обратно в облачный репозиторий
  
  но мы на локальном репозитории можем создать новые ветки, которых нет на облочном.
  тогда используем команду
  
  git push -u origin name_branch мы копируем из текущей с созданием ветки на облачном (origin) репозитории
  
  git pull скачать с обланого репозитория на локальный обновления (изменения) на текущей ветке
  
  git fetch подгрузить обновления из репозитория ??????? надо разобрать её !!!!
  
  
  
  
  
  
  
